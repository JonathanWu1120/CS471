3. Named subroutines that are nested have state, and the state can be changed. In the first foo call, lex is present in both foo and bar, so foo gets the value for lex from the subroutine call. After it prints the value of lex, it calls bar, and since bar does not have parameters it adopts the value of lex from the outside function foo and uses that value for the lex value in bar. THat makes the value of lex 5 and once the foo call is finished the second foo call repeats the same steps and lex is already set to 5 in that case, so when foo(3) is called, var does not retrieve the value of lex from foo and uses the value from the foo(2) call.
